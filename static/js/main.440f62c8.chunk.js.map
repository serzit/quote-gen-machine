{"version":3,"sources":["api/quotesRequest.js","components/Quote.js","components/App.js","index.js"],"names":["axios","create","baseURL","Quote","clickHandler","quote","id","author","className","href","target","onClick","App","useState","quotesList","setQuotesList","setQuote","loading","setLoading","useEffect","quotesRequest","get","then","res","data","quotes","e","preventDefault","random","Math","floor","length","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"iOAEeA,E,OAAAA,EAAMC,OAAO,CAC3BC,QAAS,+HCeKC,EAhBD,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,MAAhB,OACb,yBAAKC,GAAG,aACP,uBAAGA,GAAG,QAAQD,EAAMA,OACpB,uBAAGC,GAAG,UAAN,KAAkBD,EAAME,QACxB,yBAAKC,UAAU,OACd,uBAAGC,KAAI,mEAA8DJ,EAAMA,MAApE,YAA6EA,EAAME,QACxFG,OAAO,SACPJ,GAAG,eAEJ,uBAAGE,UAAU,mBAEd,4BAAQG,QAASP,EAAcE,GAAG,aAAlC,gBCoBYM,EA7BH,WAAO,IAAD,EACoBC,mBAAS,IAD7B,mBACTC,EADS,KACGC,EADH,OAEUF,mBAAS,IAFnB,mBAETR,EAFS,KAEFW,EAFE,OAGcH,oBAAS,GAHvB,mBAGTI,EAHS,KAGAC,EAHA,KAKhBC,qBAAW,WACQC,EAAcC,IAAI,gBAClCC,MAAK,SAAAC,GACJR,EAAcQ,EAAIC,KAAKC,QACvBT,EAASO,EAAIC,KAAKC,OAAO,IACzBP,GAAW,QAEZ,IAUH,OAAID,EAAgB,KAGlB,kBAAC,EAAD,CAAOb,aAXY,SAACsB,GACpBA,EAAEC,iBACFT,GAAW,GACX,IAAMU,EAASC,KAAKC,MAAMD,KAAKD,SAAWd,EAAWiB,QACrDf,EAASF,EAAWc,IACpBI,YAAW,kBAAMd,GAAW,KAAQ,KAMDb,MAAOA,K,MCvB9C4B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.440f62c8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n\tbaseURL: 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc'\r\n})","import React from 'react';\r\n\r\nconst Quote = ({clickHandler, quote}) => (\r\n\t<div id=\"quote-box\">\r\n\t\t<p id=\"text\">{quote.quote}</p>\r\n\t\t<p id=\"author\">- {quote.author}</p>\r\n\t\t<div className=\"row\">\r\n\t\t\t<a href={`https://www.twitter.com/intent/tweet?hashtags=quote&text=${quote.quote}-${quote.author}`}\r\n\t\t\t\t target=\"_blank\"\r\n\t\t\t\t id=\"tweet-quote\"\r\n\t\t\t>\r\n\t\t\t\t<p className=\"fa fa-twitter\"></p>\r\n\t\t\t</a>\r\n\t\t\t<button onClick={clickHandler} id=\"new-quote\">New Quote</button>\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default Quote","import React, {useEffect, useState} from 'react';\nimport quotesRequest from '../api/quotesRequest';\nimport Quote from './Quote';\n\nconst App = () => {\n  const [quotesList, setQuotesList] = useState([]);\n  const [quote, setQuote] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect( () => {\n    const response = quotesRequest.get('/quotes.json')\n    .then(res => {\n      setQuotesList(res.data.quotes);\n      setQuote(res.data.quotes[0])\n      setLoading(false);\n    })\n  }, [])\n\n  const clickHandler = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const random = Math.floor(Math.random() * quotesList.length);\n    setQuote(quotesList[random]);\n    setTimeout(() => setLoading(false), 30);\n  }\n\n  if (loading) return null;\n\n  return (\n    <Quote clickHandler={clickHandler} quote={quote} />\n)\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport './css/styles.scss'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}